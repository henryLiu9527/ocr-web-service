from flask import Blueprint, render_template, request, send_file, flash, current_app, jsonify
import os
import subprocess
from werkzeug.utils import secure_filename
import uuid

bp = Blueprint('main', __name__)

def allowed_file(filename):
    return '.' in filename and filename.rsplit('.', 1)[1].lower() in {'pdf'}

@bp.route('/', methods=['GET', 'POST'])
def index():
    if request.method == 'POST':
        if 'file' not in request.files:
            return jsonify({'error': '没有选择文件'}), 400
        
        file = request.files['file']
        if file.filename == '':
            return jsonify({'error': '没有选择文件'}), 400
            
        if file and allowed_file(file.filename):
            # 生成唯一文件名
            filename = str(uuid.uuid4()) + '.pdf'
            input_path = os.path.join(current_app.config['UPLOAD_FOLDER'], 'input_' + filename)
            output_path = os.path.join(current_app.config['UPLOAD_FOLDER'], 'output_' + filename)
            
            file.save(input_path)
            
            try:
                # 使用命令行方式运行OCR，添加 force-ocr 参数
                result = subprocess.run([
                    'ocrmypdf',
                    '--force-ocr',
                    '--language', 'chi_sim+eng',
                    input_path,
                    output_path
                ], capture_output=True, text=True)
                
                if result.returncode != 0:
                    raise Exception(result.stderr)
                
                # 返回处理后的文件
                return send_file(output_path, as_attachment=True, 
                               download_name='ocr_' + secure_filename(file.filename))
            except Exception as e:
                return jsonify({'error': f'OCR处理失败: {str(e)}'}), 500
            finally:
                # 清理临时文件
                if os.path.exists(input_path):
                    os.remove(input_path)
                if os.path.exists(output_path):
                    os.remove(output_path)
                    
    return render_template('index.html') 